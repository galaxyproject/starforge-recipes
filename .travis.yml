sudo: required
services:
  - docker

os:
  - linux
  - osx

language: minimal

env:
  global:
    - STARFORGE="git+https://github.com/natefoo/starforge.git@py3-wheels#egg=starforge"
    - STARFORGE_CMD="starforge --config-file=starforge.yml"
    - STARFORGE_VENV="$HOME/venv"
    - WHEEL_BUILDER_TYPE="c-extension"
    # arrays cannot be exported in Bash
  matrix:
    - PY="2.7"
    - PY="3.4"
    - PY="3.5"
    - PY="3.6"
    - PY="3.7"

matrix:
  include:
    - name: "Universal Pure Python wheels"
      os: linux
      language: python
      python: "3.6"
      env:
        - WHEEL_BUILDER_TYPE="universal"
        - PY="3.6"
      install: &purepy_install
        - pip install $STARFORGE

    - name: "Pure Python 2 wheels"
      os: linux
      language: python
      python: "2.7"
      env:
        - WHEEL_BUILDER_TYPE="purepy"
        - PY="2.7"
      install: *purepy_install

    - name: "Pure Python 3 wheels"
      os: linux
      language: python
      python: "3.6"
      env:
        - WHEEL_BUILDER_TYPE="purepy"
        - PY="3.6"
      install: *purepy_install

before_install:
  - WHEEL_METAS=()
  - echo 'Detecting changes to wheels/...'
  - git diff --quiet "$TRAVIS_COMMIT_RANGE" --; GIT_DIFF_EXIT_CODE=$?
  - |
    if [ "$GIT_DIFF_EXIT_CODE" -gt 1 ]; then
        git remote set-branches --add origin master
        git fetch
        TRAVIS_COMMIT_RANGE=origin/master...
    fi
  - echo "\$TRAVIS_COMMIT_RANGE is $TRAVIS_COMMIT_RANGE"
  - |
    while read op path; do
        case "${path##*/}" in
            meta.yml)
                ;;
            *)
                continue
                ;;
        esac
        case "$op" in
            A|M)
                echo "$op $path"
                WHEEL_METAS+=("${path}")
                ;;
        esac
    done < <(git diff --color=never --name-status "$TRAVIS_COMMIT_RANGE" -- wheels/)
  - set | grep '^WHEEL_METAS='
  - |
    if [ ${#WHEEL_METAS[@]} -eq 0 ]; then
        echo 'No wheel changes, terminating'
        travis_terminate 0
    fi

install:
  - |
    if [ "$TRAVIS_OS_NAME" == 'osx' ]; then
        pip install virtualenv
    fi
  - virtualenv "$STARFORGE_VENV"
  - . "$STARFORGE_VENV"/bin/activate
  - pip install "$STARFORGE"

before_script:
  - BUILD_WHEEL_METAS=()
  - |
    for meta in "${WHEEL_METAS[@]}"; do
        _f=${meta#wheels/} ; wheel=${_f%%/*}
        wheel_type=$($STARFORGE_CMD wheel_type --wheels-config="$meta" "$wheel")
        if [ "$wheel_type" == "$WHEEL_BUILDER_TYPE" ]; then
            BUILD_WHEEL_METAS+=("$meta")
        else
            echo "Builder for '$WHEEL_BUILDER_TYPE' skipping wheel '$wheel' of type '$wheel_type'"
        fi
    done
  - set | grep '^BUILD_WHEEL_METAS='
  - |
    if [ ${#BUILD_WHEEL_METAS[@]} -eq 0 ]; then
        echo "No wheel changes for builder '$WHEEL_BUILDER_TYPE', terminating"
        ps aux
        travis_terminate 0
    fi
  - |
    if [ "$WHEEL_BUILDER_TYPE" == 'c-extension' ]; then
        case $TRAVIS_OS_NAME in
            osx)
                STARFORGE_IMAGE_ARGS="--image=ci/osx-${PY}"
                ;;
            linux)
                STARFORGE_IMAGE_ARGS="--image=ci/linux-${PY}:x86_64 --image=ci/linux-${PY}:i686"
                ;;
        esac
        ./.ci/wheel-cext-builder-setup.sh
    else
        STARFORGE_IMAGE_ARGS="--image=ci/linux-${PY}:${WHEEL_BUILDER_TYPE}"
    fi

script:
  - |
    for meta in "${BUILD_WHEEL_METAS[@]}"; do
        _f=${meta#wheels/} ; wheel=${_f%%/*}
        echo "Building '$wheel' wheel from config: $meta"
        $STARFORGE_CMD --debug wheel --wheels-config="$meta" $STARFORGE_IMAGE_ARGS "$wheel"
        echo "Testing '$wheel' wheel"
        $STARFORGE_CMD --debug test_wheel --wheels-config="$meta" $STARFORGE_IMAGE_ARGS "$wheel"
    done

after_success:
  - |
    if ! [ "$TRAVIS_PULL_REQUEST" == "false" -a "$TRAVIS_BRANCH" == "master" -a -n "$encrypted_632cb16dd578_key" ]; then
        echo 'Nothing to deploy'
        travis_terminate 0
    fi
  - openssl aes-256-cbc -K $encrypted_632cb16dd578_key -iv $encrypted_632cb16dd578_iv -in .ci/starforge-depot.key.enc -out .ci/starforge-depot.key -d
  - echo 'wheels.galaxyproject.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCXELLgds0rObMT25AWrUFBCx6W6Z5j/wTlT54ke/grCo6RaQ9gLc5GHrJnApKpqVzyNbCIdhz/50QpzVr6EsKSITfadkoDfmmgISq6i2R+OpVgjrBvNWrUtNy6qcZqvgReOyc7yZGlhhZFU8KMTGb2Qajo3TNYiSo9Sbt96HHQIAni1xcocI1Wqw6v/wKlg+2qQgO5g56XzVeZ4yS7zTlKgLexm1GIG3CNI42lndQJJ2pVD/TJ4CDC3CV2HRv5wpJ8Y/T5/7iZr0H/5lvVd5S8wxAx5xrJr1UOIQ/76fjymq5L0kK9FpsX3vjHAOvVkwykGm2I/P4YXB6I+nuJCYtP' >> $HOME/.ssh/known_hosts
  - echo 'wheels.galaxyproject.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPTnO0DR+VKfErJfN20IY6rjHbbismna9z6SQLEYzbQwpc20fQ06qmMsGJpLD4stBB2zQibTmKRd00QNWAfdILY=' >> $HOME/.ssh/known_hosts
  - echo 'wheels.galaxyproject.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAxM4arE1L41qQ88XDNIxiAVnHeF3S2qloeTUe3AmI85' >> $HOME/.ssh/known_hosts
  - eval "$(ssh-agent -s)"
  - chmod 600 .ci/starforge-depot.key
  - ssh-add .ci/starforge-depot.key
  - scp -p *.whl wheels@wheels.galaxyproject.org:/srv/nginx/wheels.galaxyproject.org/packages
